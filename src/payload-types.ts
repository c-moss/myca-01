/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    imageAssets: ImageAsset;
    'card-benefits': CardBenefit;
    'card-type': CardType;
    'product-type': ProductType;
    'card-product': CardProduct;
    'card-status': CardStatus;
    'account-status': AccountStatus;
    'terms-and-conditions': TermsAndCondition;
    'key-benefit': KeyBenefit;
    voucher: Voucher;
    'links-page': LinksPage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    imageAssets: ImageAssetsSelect<false> | ImageAssetsSelect<true>;
    'card-benefits': CardBenefitsSelect<false> | CardBenefitsSelect<true>;
    'card-type': CardTypeSelect<false> | CardTypeSelect<true>;
    'product-type': ProductTypeSelect<false> | ProductTypeSelect<true>;
    'card-product': CardProductSelect<false> | CardProductSelect<true>;
    'card-status': CardStatusSelect<false> | CardStatusSelect<true>;
    'account-status': AccountStatusSelect<false> | AccountStatusSelect<true>;
    'terms-and-conditions': TermsAndConditionsSelect<false> | TermsAndConditionsSelect<true>;
    'key-benefit': KeyBenefitSelect<false> | KeyBenefitSelect<true>;
    voucher: VoucherSelect<false> | VoucherSelect<true>;
    'links-page': LinksPageSelect<false> | LinksPageSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'feature-configuration': FeatureConfiguration;
  };
  globalsSelect: {
    'feature-configuration': FeatureConfigurationSelect<false> | FeatureConfigurationSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * A single image asset that can be used in various places throughout the app.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imageAssets".
 */
export interface ImageAsset {
  id: string;
  name: string;
  imageAltText: string;
  /**
   * A searchable identifier for the image asset.
   */
  identifier?: string | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Defines the structure of a cards benefits page in the MYCA app. Represents either the Rewards page or the Membership page. Contains an arbitrary number of sections, each containing a list of image tiles.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-benefits".
 */
export interface CardBenefit {
  id: string;
  'benefits-type': 'card-rewards' | 'card-membership';
  'benefits-section'?:
    | {
        'section-title': string;
        tile?:
          | {
              description: string;
              url: string;
              image: string | ImageAsset;
              'card-products'?: (number | CardProduct)[] | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
}
/**
 * Represents a card product e.g. Centurion, Platinum, Gold, etc.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-product".
 */
export interface CardProduct {
  /**
   * Card product id should match the id used in the API.
   */
  id: number;
  'card-product-name': string;
}
/**
 * Represents a card type e.g. Primary or Supplementary.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-type".
 */
export interface CardType {
  /**
   * Short code should be a unique identifier for the card type.
   */
  id: string;
  'card-type-name': string;
}
/**
 * Represents a product type e.g. Lending, Charge, Corporate, etc.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-type".
 */
export interface ProductType {
  /**
   * Short code should be a unique identifier for the product type.
   */
  id: string;
  'product-type-name': string;
}
/**
 * Represents a card status e.g. Active, Suspended etc.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-status".
 */
export interface CardStatus {
  /**
   * Short code should be a unique identifier for the card status.
   */
  id: string;
  'card-status-name': string;
}
/**
 * Represents an account status e.g. Active, Suspended etc.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "account-status".
 */
export interface AccountStatus {
  /**
   * Short code should be a unique identifier for the account status.
   */
  id: string;
  'account-status-name': string;
}
/**
 * Represents a Terms and Conditions for a specific feature.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions".
 */
export interface TermsAndCondition {
  /**
   * Type should be a unique identifier for the set of terms and conditions.
   */
  id: string;
  name: string;
  text: string;
  'link-items'?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
}
/**
 * Used to define the sections of the key benefits component.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "key-benefit".
 */
export interface KeyBenefit {
  /**
   * Short code should be a unique identifier for the key benefit.
   */
  id: string;
  'benefit-title': string;
  'benefit-body': string;
  /**
   * Links to be embedded in the benefit body
   */
  'embedded-links'?:
    | {
        /**
         * The benefit body will be parsed to replace this text with the link.
         */
        'embedded-link-text': string;
        url: string;
        id?: string | null;
      }[]
    | null;
}
/**
 * Represents a 3rd-party voucher product that can be purchased with Amex points.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voucher".
 */
export interface Voucher {
  /**
   * Voucher code should match the identifier specific by FVI / Voucher Management System.
   */
  id: string;
  /**
   * Name of the voucher product. This should be the name that is displayed to the user in the app.
   */
  'voucher-name': string;
  'product-description': string;
  'delivery-details': string;
  'terms-and-conditions': string;
  image: string | ImageAsset;
}
/**
 * Defines the structure of a links page in the MYCA app. Contains an arbitrary number of sections, each containing a list of links.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links-page".
 */
export interface LinksPage {
  id: string;
  'page-name': string;
  'links-section'?:
    | {
        'section-title'?: string | null;
        'section-url'?: string | null;
        links?:
          | {
              description: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'imageAssets';
        value: string | ImageAsset;
      } | null)
    | ({
        relationTo: 'card-benefits';
        value: string | CardBenefit;
      } | null)
    | ({
        relationTo: 'card-type';
        value: string | CardType;
      } | null)
    | ({
        relationTo: 'product-type';
        value: string | ProductType;
      } | null)
    | ({
        relationTo: 'card-product';
        value: number | CardProduct;
      } | null)
    | ({
        relationTo: 'card-status';
        value: string | CardStatus;
      } | null)
    | ({
        relationTo: 'account-status';
        value: string | AccountStatus;
      } | null)
    | ({
        relationTo: 'terms-and-conditions';
        value: string | TermsAndCondition;
      } | null)
    | ({
        relationTo: 'key-benefit';
        value: string | KeyBenefit;
      } | null)
    | ({
        relationTo: 'voucher';
        value: string | Voucher;
      } | null)
    | ({
        relationTo: 'links-page';
        value: string | LinksPage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imageAssets_select".
 */
export interface ImageAssetsSelect<T extends boolean = true> {
  name?: T;
  imageAltText?: T;
  identifier?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tile?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-benefits_select".
 */
export interface CardBenefitsSelect<T extends boolean = true> {
  'benefits-type'?: T;
  'benefits-section'?:
    | T
    | {
        'section-title'?: T;
        tile?:
          | T
          | {
              description?: T;
              url?: T;
              image?: T;
              'card-products'?: T;
              id?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-type_select".
 */
export interface CardTypeSelect<T extends boolean = true> {
  id?: T;
  'card-type-name'?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-type_select".
 */
export interface ProductTypeSelect<T extends boolean = true> {
  id?: T;
  'product-type-name'?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-product_select".
 */
export interface CardProductSelect<T extends boolean = true> {
  id?: T;
  'card-product-name'?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "card-status_select".
 */
export interface CardStatusSelect<T extends boolean = true> {
  id?: T;
  'card-status-name'?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "account-status_select".
 */
export interface AccountStatusSelect<T extends boolean = true> {
  id?: T;
  'account-status-name'?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-conditions_select".
 */
export interface TermsAndConditionsSelect<T extends boolean = true> {
  id?: T;
  name?: T;
  text?: T;
  'link-items'?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "key-benefit_select".
 */
export interface KeyBenefitSelect<T extends boolean = true> {
  id?: T;
  'benefit-title'?: T;
  'benefit-body'?: T;
  'embedded-links'?:
    | T
    | {
        'embedded-link-text'?: T;
        url?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "voucher_select".
 */
export interface VoucherSelect<T extends boolean = true> {
  id?: T;
  'voucher-name'?: T;
  'product-description'?: T;
  'delivery-details'?: T;
  'terms-and-conditions'?: T;
  image?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links-page_select".
 */
export interface LinksPageSelect<T extends boolean = true> {
  'page-name'?: T;
  'links-section'?:
    | T
    | {
        'section-title'?: T;
        'section-url'?: T;
        links?:
          | T
          | {
              description?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Describes a set of configurable features within the application. Features can be disabled for specific card types, product types, and card products.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feature-configuration".
 */
export interface FeatureConfiguration {
  id: string;
  feature?:
    | {
        id: string | null;
        'feature-name': string;
        'disabled-card-types'?: (string | CardType)[] | null;
        'disabled-product-types'?: (string | ProductType)[] | null;
        'disabled-card-products'?: (number | CardProduct)[] | null;
        'disabled-card-status'?: (string | CardStatus)[] | null;
        'disabled-account-status'?: (string | AccountStatus)[] | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feature-configuration_select".
 */
export interface FeatureConfigurationSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        id?: T;
        'feature-name'?: T;
        'disabled-card-types'?: T;
        'disabled-product-types'?: T;
        'disabled-card-products'?: T;
        'disabled-card-status'?: T;
        'disabled-account-status'?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}